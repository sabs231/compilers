Type                   Lexeme
Reserved ==> count
Id ==> contador
Asignment ==> =
Number ==> 0
Punctuation ==> ;
Reserved ==> arr
Id ==> a
Asignment ==> =
Agrupation ==> [
Number ==> 1
Punctuation ==> ,
Number ==> 2
Punctuation ==> ,
String ==> "a"
Punctuation ==> ,
Number ==> 4
Punctuation ==> ,
String ==> "lala"
Reserved ==> nil
Agrupation ==> ]
Punctuation ==> ;
Output ==> @
String ==> "<html><body>"
Punctuation ==> ;
Reserved ==> while
Agrupation ==> (
Id ==> contador
Relational ==> <
Number ==> 5
Agrupation ==> )
Agrupation ==> {
Reserved ==> if
Agrupation ==> (
Id ==> contador
Arithmetic ==> %
Number ==> 2
Relational ==> ==
Number ==> 0
Agrupation ==> )
Agrupation ==> {
Output ==> @
String ==> "<h1>"
Punctuation ==> ;
Output ==> @
Id ==> a
Agrupation ==> [
Id ==> contador
Agrupation ==> ]
Punctuation ==> ;
Output ==> @
String ==> "</h1><br>"
Output ==> @
Punctuation ==> ;
Agrupation ==> }
Reserved ==> else
Agrupation ==> {
Output ==> @
String ==> "<p>"
Punctuation ==> ;
Output ==> @
Id ==> a
Agrupation ==> [
Id ==> contador
Agrupation ==> ]
Punctuation ==> ;
Output ==> @
String ==> "</p><br>"
Output ==> @
Punctuation ==> ;
Agrupation ==> }
Id ==> contador
Asignment ==> =
Id ==> contador
Arithmetic ==> +
Number ==> 1
Punctuation ==> ;
Output ==> @
String ==> "</body></html>"
Punctuation ==> ;
$ ==> END
