Type                   Lexeme
Agrupation ==> [
Agrupation ==> ]
Agrupation ==> (
Agrupation ==> )
Agrupation ==> {
Agrupation ==> (
Agrupation ==> )
Agrupation ==> {
Agrupation ==> [
Agrupation ==> ]
Agrupation ==> }
Agrupation ==> {
Agrupation ==> [
Agrupation ==> ]
Agrupation ==> }
Agrupation ==> }
Arithmetic ==> %
Arithmetic ==> +
Asignment ==> =
Asignment ==> =
Asignment ==> =
Id ==> a
Id ==> i
Id ==> contador
Id ==> contador
Id ==> a
Id ==> contador
Id ==> a
Id ==> contador
Id ==> contador
Id ==> contador
Number ==> 1
Number ==> 2
Number ==> 4
Number ==> 0
Number ==> 5
Number ==> 2
Number ==> 0
Number ==> 1
Output ==> @
Output ==> @
Output ==> @
Output ==> @
Output ==> @
Output ==> @
Output ==> @
Output ==> @
Punctuation ==> ,
Punctuation ==> ,
Punctuation ==> ,
Punctuation ==> ,
Punctuation ==> ,
Punctuation ==> ;
Punctuation ==> ;
Punctuation ==> ;
Punctuation ==> ;
Punctuation ==> ;
Punctuation ==> ;
Punctuation ==> ;
Punctuation ==> ;
Punctuation ==> ;
Relational ==> <
Relational ==> ==
Reserved ==> arr
Reserved ==> nil
Reserved ==> count
Reserved ==> while
Reserved ==> if
Reserved ==> else
String ==> "a"
String ==> "lala"
String ==> "<h1>"
String ==> "</h1><br>"
String ==> "<p>"
String ==> "</p><br>"
